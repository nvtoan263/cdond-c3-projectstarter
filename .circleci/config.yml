version: 2.1
executors:
  build-executor:
    docker:
      - image: circleci/node:13.8.0
  slack-executor:
    docker:
      - image: circleci/node:latest
orbs:
  slack: circleci/slack@4.12.1
defaults: &defaults
  context: circleci-context  
jobs:
  build-frontend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: mkdir -p /tmp/frontend-workspace
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - run: echo "frontend-build-completed" > /tmp/frontend-workspace/output.txt
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - persist_to_workspace:
          root:  /tmp/frontend-workspace
          paths:
            - output.txt
  build-backend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Build back-end
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  test-frontend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [test-frontend]
      - run:
          name: Test frontend
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: test-frontend
                
  test-backend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [test-backend]
      - run:
          name: Test backend
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: [backend/node_modules]
          key: test-backend
  scan-frontend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [scan-frontend]
      - run:
          name: Scan frontend
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [frontend/node_modules]
          key: scan-frontend     
  scan-backend:
    executor: build-executor
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [scan-backend]
      - run:
          name: Scan backend
          command: |
            cd backend
            npm install
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [backend/node_modules]
          key: scan-backend
  notify:
    executor: slack-executor
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/frontend-workspace
          paths:
            - output.txt
      - run: |
          if [[ $(cat /tmp/frontend-workspace/output.txt) == "frontend-build-completed" ]]; then
            echo "frontend-build successfully";
          else
            cat /tmp/cicd-workspace/output.txt 
            echo "frontend-build failed"; exit 1
          fi
      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1          
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend     
      - test-frontend:    
          requires:
          -  build-frontend
      - test-backend:  
          requires:
          -  build-backend
      - scan-frontend:     
          requires:
          -  build-frontend
      - scan-backend:  
          requires:
          -  build-backend
      - notify:
          requires:
          -  build-frontend